<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Git fetch 同时更新子模块</title>
    <url>/2021/12/02/Git-fetch-%E5%90%8C%E6%97%B6%E6%9B%B4%E6%96%B0%E5%AD%90%E6%A8%A1%E5%9D%97/</url>
    <content><![CDATA[<h2 id="1-问题描述"><a href="#1-问题描述" class="headerlink" title="1. 问题描述"></a>1. 问题描述</h2><p>默认情况，git checkout;     git fetch   如果子模块 submodule 的版本不一致， git 是不会自动更新子模块；</p>
<span id="more"></span>

<h2 id="2-传统解决方法："><a href="#2-传统解决方法：" class="headerlink" title="2. 传统解决方法："></a>2. 传统解决方法：</h2><p>cd  submodules 文件夹；</p>
<p>git checkout / fetch；</p>
<h2 id="3-高级解决方法："><a href="#3-高级解决方法：" class="headerlink" title="3. 高级解决方法："></a>3. 高级解决方法：</h2><p>在全局进行 Git 设置：</p>
<table>
<thead>
<tr>
<th align="left">1</th>
<th align="left">git config –global submodule.recurse true</th>
</tr>
</thead>
</table>
<p>设置 submodule.recurse true 后，不仅仅 git checkout 会自动切换子模块，git fetch / pull 也会自动拉取子模块的更新</p>
<p>注意：这个设置对用户机器上安装的 git 版本有要求，详见下面说明</p>
<p>在发行说明中提到了这一点：<a href="https://github.com/git/git/commit/e1104a5ee539408b81566066aaa6963cb87d5cd6#diff-c24776ff22455a30fbb78e378b7df0b0R139">https://github.com/git/git/commit/e1104a5ee539408b81566066aaa6963cb87d5cd6#diff-c24776ff22455a30fbb78e378b7df0b0R139</a></p>
<p>submodule.recurse 选项已添加到 git 2.14</p>
]]></content>
      <categories>
        <category>Git 相关</category>
      </categories>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>ElasticSearch 操作异常总结</title>
    <url>/2021/12/15/ElasticSearch-%E6%93%8D%E4%BD%9C%E5%BC%82%E5%B8%B8%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<h1 id="1-Index-写入数据-FORBIDDEN-问题"><a href="#1-Index-写入数据-FORBIDDEN-问题" class="headerlink" title="1. Index 写入数据 FORBIDDEN 问题"></a>1. Index 写入数据 FORBIDDEN 问题</h1><h2 id="1-1-问题描述"><a href="#1-1-问题描述" class="headerlink" title="1.1 问题描述"></a>1.1 问题描述</h2><p>在使用七牛云的 Logkit 往 ElasticSearch 发送数据的时候出现了以下异常信息；</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"># SendError: bulk failed with last error</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;_index&quot;</span>:<span class="string">&quot;dev_cbim_tool_log&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;_type&quot;</span>:<span class="string">&quot;cbim_tool_log&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;_id&quot;</span>:<span class="string">&quot;UhoDvX0B7FSmwLI_OPym&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>:<span class="number">403</span>,</span><br><span class="line">    <span class="attr">&quot;error&quot;</span>:&#123;</span><br><span class="line">        <span class="attr">&quot;type&quot;</span>:<span class="string">&quot;cluster_block_exception&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;reason&quot;</span>:<span class="string">&quot;blocked by: [FORBIDDEN/12/index read-only / allow delete (api)];&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"># failDatas size : <span class="number">33</span>	</span><br></pre></td></tr></table></figure>

<p>其核心异常提示是：[FORBIDDEN/12/index read-only / allow delete (api)]</p>
<span id="more"></span>

<h2 id="1-2-原因分析"><a href="#1-2-原因分析" class="headerlink" title="1.2 原因分析"></a>1.2 原因分析</h2><p>从字面意思看，ES 禁止数据写入；</p>
<p>联想到最近服务器发生的一系列问题，一切都能解释的通了；</p>
<p>最近发现：ES 集群的一个节点挂了（主要是因为服务器的磁盘坏了）；</p>
<p>在这样的情况下，触发了 ES 的保护机制，因此出现了上面的情况；</p>
<h2 id="1-3-解决方法"><a href="#1-3-解决方法" class="headerlink" title="1.3 解决方法"></a>1.3 解决方法</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">curl -XPUT -H &quot;Content-Type: application/json&quot; http://localhost:9200/_all/_settings -d &#x27;&#123;&quot;index.blocks.read_only_allow_delete&quot;: null&#125;&#x27;</span><br></pre></td></tr></table></figure>

<p> 参考链接：[如何修复 ElasticSearch <a href="https://techoverflow.net/2019/04/17/how-to-fix-elasticsearch-forbidden-12-index-read-only-allow-delete-api/">FORBIDDEN/12/index read-only / allow delete （api）] – TechOverflow</a></p>
<h1 id="2-ElasticSearch-启动参数问题"><a href="#2-ElasticSearch-启动参数问题" class="headerlink" title="2. ElasticSearch 启动参数问题"></a>2. ElasticSearch 启动参数问题</h1><p>通过 docker 启动 es 的时候，相关参数设置跟 es 的镜像版本有关；</p>
<p>这里主要说明常见的各种 es 设置问题</p>
<h2 id="2-1-unknown-setting-discovery-seed-hosts"><a href="#2-1-unknown-setting-discovery-seed-hosts" class="headerlink" title="2.1 unknown setting [discovery.seed_hosts]"></a>2.1 unknown setting [discovery.seed_hosts]</h2><h3 id="产生背景"><a href="#产生背景" class="headerlink" title="产生背景"></a>产生背景</h3><p>使用2019年的老脚本启动 es 的 docker 实例；</p>
<p>注：笔者是 2021.12.15 pull 最新的 es 镜像启动实例的，启动实例使用的参数是 2019 年底时的；</p>
<h3 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h3><p>2019 年底的 es 镜像和 2021 年的镜像文件参数设置不一致，</p>
<p>可以通过 dock inspect elasticsearch 查看</p>
<h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><p>使用下面的配置替代</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">discovery.zen.ping.unicast.hosts:</span> [<span class="string">&quot;192.168.10.11:9300&quot;</span>,<span class="string">&quot;192.168.10.12:9300&quot;</span>,<span class="string">&quot;192.168.10.13:9300&quot;</span>]</span><br></pre></td></tr></table></figure>

<p><font color="red">注意：启动脚本，最好跟 docker 镜像配套使用</font></p>
<h3 id="类似的问题"><a href="#类似的问题" class="headerlink" title="类似的问题"></a>类似的问题</h3><p>unknown setting [cluster.initial_master_nodes] </p>
<h2 id="2-2-ES-缓存设置"><a href="#2-2-ES-缓存设置" class="headerlink" title="2.2 ES 缓存设置"></a>2.2 ES 缓存设置</h2><p>默认设置：ES_JAVA_OPTS=”-Xms256m -Xmx256m”</p>
<p>启动的时候可以加 -e 指定参数</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">-e ES_JAVA_OPTS=&quot;-Xms1g -Xmx1g&quot;</span><br></pre></td></tr></table></figure>

<p>设置过大可能导致本机缓存不够，启动时有如下错误提示：</p>
<blockquote>
<p>max virtual memory areas vm.max_map_count [65530] is too low, increase to at least [262144]</p>
</blockquote>
<p>解决方法：修改 centos 系统的缓存设置</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 1. open and edit conf</span></span><br><span class="line">vi /etc/sysctl.conf</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 2. add at last vm.max_map_count=262144</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 3. apply</span></span><br><span class="line">/sbin/sysctl -p</span><br></pre></td></tr></table></figure>



<h1 id="3-ElasticSearch-集群状态排查"><a href="#3-ElasticSearch-集群状态排查" class="headerlink" title="3. ElasticSearch 集群状态排查"></a>3. ElasticSearch 集群状态排查</h1><p><a href="https://blog.csdn.net/laoyang360/article/details/109699085">Elasticsearch 集群故障排查及修复指南_铭毅天下（公众号同名）-CSDN博客</a></p>
<h1 id="4-ES-索引-primary-shard-is-unassigned-解决方法"><a href="#4-ES-索引-primary-shard-is-unassigned-解决方法" class="headerlink" title="4. ES 索引 primary shard is unassigned 解决方法"></a>4. ES 索引 primary shard is unassigned 解决方法</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">POST /_cluster/reroute</span><br><span class="line">&#123;</span><br><span class="line">  &quot;commands&quot; : [</span><br><span class="line">  &#123;</span><br><span class="line">    &quot;allocate_stale_primary&quot; : &#123;</span><br><span class="line">    &quot;index&quot; : &quot;.monitoring-kibana-6-2021.12.17&quot;, </span><br><span class="line">    &quot;shard&quot; : 0,</span><br><span class="line">    &quot;node&quot; : &quot;es-node-2&quot;,</span><br><span class="line">    &quot;accept_data_loss&quot; : true</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><a href="https://blog.csdn.net/weixin_34050519/article/details/85936609">ES 遇到 unassigned shard如何处理？_weixin_34050519的博客-CSDN博客</a></p>
<p><a href="https://blog.csdn.net/dlm_bk/article/details/102840031">解决elasticsearch分片unassigned的3个方法_dlm_bk的博客-CSDN博客_es分片unassigned</a></p>
]]></content>
      <categories>
        <category>ElasticSearch</category>
      </categories>
      <tags>
        <tag>ElasticSearch</tag>
        <tag>ES</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo Next Theme 使用问题总结</title>
    <url>/2021/12/21/Hexo-Next-Theme-%E4%BD%BF%E7%94%A8%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<div class="note info"><p>两个路径说明：</p>
<p>site root directory：博客站点根目录</p>
<p>theme root directory：博客主题根目录</p>
<p>后面说明问题会一直沿用这中叫法；</p>
</div>

<h1 id="1-部署后“搜索”功能无法使用"><a href="#1-部署后“搜索”功能无法使用" class="headerlink" title="1. 部署后“搜索”功能无法使用"></a>1. 部署后“搜索”功能无法使用</h1><p><strong>原因</strong></p>
<p>使用了最新的 master 版本，master 分支是主题作者的开发分支，每周都会更新，当时不稳定</p>
<span id="more"></span>

<p><strong>解决方法</strong></p>
<p>拉去稳定版本的分支，主要看最新的 Tag</p>
<p>参考 Issues 链接：<a href="https://github.com/hexojs/hexo/issues/4654">https://github.com/hexojs/hexo/issues/4654</a></p>
<h1 id="2-替换图片资源路径"><a href="#2-替换图片资源路径" class="headerlink" title="2. 替换图片资源路径"></a>2. 替换图片资源路径</h1><p>主题涉及到的，各种图片资源都是可以替换的，</p>
<p><strong>替换路径：theme root directory\theme\next\source\images</strong></p>
<p>为了显示效果，注意替换的图片最好是对应像素的，而且不易过大，图片类型可以自己修改</p>
<p>可替换图片说明：</p>
<table>
<thead>
<tr>
<th>图片名称</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>avatar</td>
<td>博主图像</td>
</tr>
<tr>
<td>favicon-16x16-next</td>
<td>网站图标 16x16 像素</td>
</tr>
<tr>
<td>favicon-32x32-next</td>
<td>网站图标 32x32 像素</td>
</tr>
<tr>
<td>logo</td>
<td>log</td>
</tr>
<tr>
<td>apple-touch-icon-next</td>
<td>触摸图标</td>
</tr>
<tr>
<td>alipay</td>
<td>支付宝收款二维码</td>
</tr>
<tr>
<td>weixin</td>
<td>微信收款二维码</td>
</tr>
</tbody></table>
<h1 id="3-增加自定义的“标签”，“分类”页面"><a href="#3-增加自定义的“标签”，“分类”页面" class="headerlink" title="3. 增加自定义的“标签”，“分类”页面"></a>3. 增加自定义的“标签”，“分类”页面</h1><p>默认安装好的 next 主题，是没有“标签”，“分类”页面的；</p>
<p>需要使用者自己新增页面：</p>
<p>新增方法：以“标签”也为例说明：</p>
<ol>
<li><p>使用 hexo 命令新建 tags.md页面</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">cd</span> site root directory</span></span><br><span class="line">hexo new page tags</span><br></pre></td></tr></table></figure></li>
<li><p>打开 tags.md 并修改页面类型 type 信息</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">title: Tags</span><br><span class="line">date: 2021-12-22 12:00:00</span><br><span class="line">type: tags</span><br></pre></td></tr></table></figure></li>
<li><p>修改主题配置文件</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># cd next/_config.yml</span></span><br><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-home</span></span><br><span class="line">  <span class="attr">archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-archive</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-tags</span></span><br></pre></td></tr></table></figure></li>
</ol>
<h1 id="4-开启首页文章部分显示"><a href="#4-开启首页文章部分显示" class="headerlink" title="4. 开启首页文章部分显示"></a>4. 开启首页文章部分显示</h1><p>next 主题默认的是将你的文章全篇显示在自己的首页上，这就会导致一个问题，首页各个文章太长了不利于翻阅</p>
<p>想要让文章部分显示，并出现“阅读全文的按钮”，只需要在个人的文章 Markdown 源文件中添加一行代码就行</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--more--&gt;</span></span><br></pre></td></tr></table></figure>

<p>具体位置，自己确定，在自己想要显示的文章部分下面加上即可只在首页显示所需的文章部分。</p>
<p>参考文档：</p>
<p><a href="https://theme-next.js.org/docs/theme-settings/custom-pages.html?highlight=categories#Adding-%C2%ABTags%C2%BB-Page">Custom Pages | NexT (theme-next.js.org)</a></p>
<p><a href="https://github.com/iissnan/hexo-theme-next/wiki/%E5%88%9B%E5%BB%BA%E5%88%86%E7%B1%BB%E9%A1%B5%E9%9D%A2">创建分类页面 · iissnan/hexo-theme-next Wiki (github.com)</a></p>
<p><a href="https://knner.wang/2019/11/03/Hexo-ThemeNext-Writing.html">Hexo + Theme Next – 写作 | Knner.Wang’s Blog</a></p>
]]></content>
      <categories>
        <category>Hexo</category>
        <category>Hexo Theme</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Theme</tag>
      </tags>
  </entry>
  <entry>
    <title>Typora 设置关联七牛云图床</title>
    <url>/2021/12/06/Typora-%E8%AE%BE%E7%BD%AE%E5%85%B3%E8%81%94%E4%B8%83%E7%89%9B%E4%BA%91%E5%9B%BE%E5%BA%8A/</url>
    <content><![CDATA[<h1 id="1-七牛云存储环境准备"><a href="#1-七牛云存储环境准备" class="headerlink" title="1. 七牛云存储环境准备"></a>1. 七牛云存储环境准备</h1><h2 id="1-1-注册"><a href="#1-1-注册" class="headerlink" title="1.1 注册"></a>1.1 注册</h2><p>七牛云官网：<a href="https://www.qiniu.com/">七牛云 - 国内领先的企业级云服务商 (qiniu.com)</a></p>
<p>注册流程不在这里详细说明；</p>
<p>说一下注意事项：</p>
<ol>
<li>注册后，需要实名认证</li>
<li>个人认证 即可</li>
</ol>
<span id="more"></span>

<h2 id="1-2-新建图床存储空间"><a href="#1-2-新建图床存储空间" class="headerlink" title="1.2 新建图床存储空间"></a>1.2 新建图床存储空间</h2><ol>
<li>登录后，通过“管理控制台”进入管理页面；</li>
<li>点击“对象存储 Kodo”；</li>
<li>点击“空间管理” -&gt; “新建空间” 进行图床空间创建；</li>
<li>如下图所示，设置完相关参数，即可创建一个图床存储空间；</li>
</ol>
<p><img src="http://r3oaewll2.hb-bkt.clouddn.com/image-20211207135828755.png" alt="image-20211207135828755"></p>
<p>注意事项：</p>
<ol>
<li>访问权限选择“公开”</li>
<li>存储区域一般选择“距离自己比较近的”，并且不同区域有不同的代号，后面会用到</li>
</ol>
<h1 id="2-PicGo-安装"><a href="#2-PicGo-安装" class="headerlink" title="2. PicGo 安装"></a>2. PicGo 安装</h1><p>PicGo  有两种类型；</p>
<ol>
<li>PicGo App（应用程序）</li>
<li>PicGo-Core（命令行版本）</li>
</ol>
<h2 id="2-1-安装"><a href="#2-1-安装" class="headerlink" title="2.1 安装"></a>2.1 安装</h2><h3 id="2-1-1-图形界面版本"><a href="#2-1-1-图形界面版本" class="headerlink" title="2.1.1 图形界面版本"></a>2.1.1 图形界面版本</h3><p><a href="https://github.com/Molunerfinn/PicGo/releases">PicGo图形</a></p>
<p>选择对应系统的安装包安装即可</p>
<h3 id="2-1-2-命令行版本"><a href="#2-1-2-命令行版本" class="headerlink" title="2.1.2 命令行版本"></a>2.1.2 命令行版本</h3><p><a href="https://github.com/PicGo/PicGo-Core">PicGo-core</a></p>
<ul>
<li>没有nodejs环境，使用typora一键安装即可</li>
<li>本机有nodjs环境，直接npm全局安装</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install picgo -g</span><br><span class="line"><span class="meta">#</span><span class="bash"> or</span></span><br><span class="line">yarn global add picgo</span><br></pre></td></tr></table></figure>



<p>插件安装</p>
<p><a href="https://github.com/yuki-xin/picgo-plugin-web-uploader">picgo-plugin-web-uploader</a></p>
<p>这是一款可以上传自定义图床的插件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">picgo install web-uploader</span><br></pre></td></tr></table></figure>



<h2 id="2-2-配置"><a href="#2-2-配置" class="headerlink" title="2.2 配置"></a>2.2 配置</h2><p>关于存储区域的填写跟在七牛云上新建空间的地理位置有关；</p>
<p>具体参考：<a href="https://developer.qiniu.com/kodo/1671/region-endpoint-fq">存储区域_产品简介_对象存储 - 七牛开发者中心 (qiniu.com)</a></p>
<p><img src="http://r3oaewll2.hb-bkt.clouddn.com/image-20211206144124515.png" alt="image-20211206144124515"></p>
<h3 id="2-2-1-图形版直接图形界面配置"><a href="#2-2-1-图形版直接图形界面配置" class="headerlink" title="2.2.1 图形版直接图形界面配置"></a>2.2.1 图形版直接图形界面配置</h3><p>参考配置</p>
<p><img src="http://r3oaewll2.hb-bkt.clouddn.com/image-20211208133520184.png" alt="image-20211208133520184"></p>
<h3 id="2-2-2-图形版直接图形界面配置"><a href="#2-2-2-图形版直接图形界面配置" class="headerlink" title="2.2.2 图形版直接图形界面配置"></a>2.2.2 图形版直接图形界面配置</h3><p>参考配置文件</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;picBed&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;uploader&quot;</span>: <span class="string">&quot;qi_niu&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;current&quot;</span>: <span class="string">&quot;qi_niu&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;qi_niu&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;accessKey&quot;</span>: <span class="string">&quot;you-access-key&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;secretKey&quot;</span>: <span class="string">&quot;you-secret-key&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;bucket&quot;</span>: <span class="string">&quot;blog-pic-resp&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;http://you-url&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;area&quot;</span>: <span class="string">&quot;z1&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;options&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;path&quot;</span>: <span class="string">&quot;&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;picgoPlugins&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;picgo-plugin-web-uploader&quot;</span>: <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id=""><a href="#" class="headerlink" title=""></a></h2><h1 id="3-Typora-图片存储设置"><a href="#3-Typora-图片存储设置" class="headerlink" title="3. Typora 图片存储设置"></a>3. Typora 图片存储设置</h1><p>设置入口：设置 - 偏好设置 - 图像；</p>
<p>如下图所示：</p>
<p><img src="http://r3oaewll2.hb-bkt.clouddn.com/image-20211207102745086.png" alt="image-20211207102745086"></p>
<p><img src="http://r3oaewll2.hb-bkt.clouddn.com/image-20211207102901759.png" alt="image-20211207102901759"></p>
<ol>
<li>插入图片时：选择：上传图片；</li>
<li>上传服务设定<ol>
<li>上传服务：选择：PicGo（app）</li>
<li>PicGo 路径：选择：自己安装时候的路径</li>
</ol>
</li>
</ol>
<p>当上述两大项设置完毕后，点击：“验证图片上传选项”</p>
<p>设置成功后，会出现“验证成功”的提示，如下图：</p>
<p>如果你的主题设置是 Onedark 一类的黑色主题，这个提示可能会不明显，需要仔细查看才能看到；</p>
<p><img src="http://r3oaewll2.hb-bkt.clouddn.com/image-20211207103956991.png" alt="image-20211207103956991"></p>
<p><img src="http://r3oaewll2.hb-bkt.clouddn.com/image-20211207104327148.png" alt="image-20211207104327148"></p>
]]></content>
      <categories>
        <category>Markdown</category>
      </categories>
      <tags>
        <tag>Typora</tag>
        <tag>PicGo</tag>
      </tags>
  </entry>
  <entry>
    <title>WPF 在 Trigger 中修改 Button Content 注意事项</title>
    <url>/2021/12/02/WPF-%E5%9C%A8-Trigger-%E4%B8%AD%E4%BF%AE%E6%94%B9-Button-Content-%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/</url>
    <content><![CDATA[<h2 id="1-问题描述"><a href="#1-问题描述" class="headerlink" title="1. 问题描述"></a>1. 问题描述</h2><p>xaml 代码块如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;Button Content=&quot;333&quot;&gt;</span><br><span class="line">                &lt;Button.Style&gt;</span><br><span class="line">                    &lt;Style TargetType=&quot;Button&quot;&gt;</span><br><span class="line">                        &lt;Setter Property=&quot;Width&quot; Value=&quot;70&quot;/&gt;</span><br><span class="line">                        &lt;Setter Property=&quot;Height&quot; Value=&quot;27&quot;/&gt;</span><br><span class="line">                        &lt;Style.Triggers&gt;</span><br><span class="line">                            &lt;DataTrigger Binding=&quot;&#123;Binding ElementName=listBox, Path=SelectedIndex&#125;&quot; Value=&quot;2&quot;&gt;</span><br><span class="line">                                &lt;Setter Property=&quot;Content&quot; Value=&quot;three&quot; /&gt;</span><br><span class="line">                            &lt;/DataTrigger&gt;</span><br><span class="line">                        &lt;/Style.Triggers&gt;</span><br><span class="line">                    &lt;/Style&gt;</span><br><span class="line">                &lt;/Button.Style&gt;</span><br><span class="line">            &lt;/Button&gt;</span><br></pre></td></tr></table></figure>

<p>运行后，触发 DataTrigger 发现 Button 的 Content 没有变化</p>
<span id="more"></span>

<h2 id="2-原因和解决方法"><a href="#2-原因和解决方法" class="headerlink" title="2. 原因和解决方法"></a>2. 原因和解决方法</h2><p>原因：定义 Button 的时候直接指定 Content 相当于定死了 Button 的 Content ，所以在 Style 的 Trigger 中就无法修改了；</p>
<p>注意： 这个时候如果指定有默认的 Button Style，默认样式也会失效；原因是重写了 Style；</p>
<p>解决方案：将 Content 的默认值，写进 Button.Style，如下所示：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;Button&gt;</span><br><span class="line">     &lt;Button.Style&gt;</span><br><span class="line">         &lt;Style TargetType=&quot;Button&quot;&gt;</span><br><span class="line">             &lt;Setter Property=&quot;Content&quot; Value=&quot;333&quot;/&gt;</span><br><span class="line">             &lt;Setter Property=&quot;Width&quot; Value=&quot;70&quot;/&gt;</span><br><span class="line">             &lt;Setter Property=&quot;Height&quot; Value=&quot;27&quot;/&gt;</span><br><span class="line">             &lt;Style.Triggers&gt;</span><br><span class="line">                 &lt;DataTrigger Binding=&quot;&#123;Binding ElementName=listBox, Path=SelectedIndex&#125;&quot; Value=&quot;2&quot;&gt;</span><br><span class="line">                     &lt;Setter Property=&quot;Content&quot; Value=&quot;three&quot; /&gt;</span><br><span class="line">                 &lt;/DataTrigger&gt;</span><br><span class="line">             &lt;/Style.Triggers&gt;</span><br><span class="line">         &lt;/Style&gt;</span><br><span class="line">     &lt;/Button.Style&gt;</span><br><span class="line"> &lt;/Button&gt;</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>WPF</category>
      </categories>
      <tags>
        <tag>.Net</tag>
        <tag>C#</tag>
        <tag>WPF</tag>
        <tag>Style</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/04/12/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>test_my_site</title>
    <url>/2020/04/12/test-my-site/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>wpf control window 范围内默认样式对第一个控件无效</title>
    <url>/2021/12/02/wpf-control-window-%E8%8C%83%E5%9B%B4%E5%86%85%E9%BB%98%E8%AE%A4%E6%A0%B7%E5%BC%8F%E5%AF%B9%E7%AC%AC%E4%B8%80%E4%B8%AA%E6%8E%A7%E4%BB%B6%E6%97%A0%E6%95%88/</url>
    <content><![CDATA[<h2 id="1、问题描述"><a href="#1、问题描述" class="headerlink" title="1、问题描述"></a>1、问题描述</h2><p>wpf 页面设计中，有时候在 xaml 文件 Resource 中指定 window 范围的默认 control style，但是却发现对第一个控件不起作用，具体如下：</p>
<span id="more"></span>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;Window x:Class=&quot;TestApp.TestWindow&quot;</span><br><span class="line">        xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span><br><span class="line">        xmlns:x=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</span><br><span class="line">        Title=&quot;TestWindow&quot; Height=&quot;400&quot; Width=&quot;500&quot;</span><br><span class="line">        WindowStyle=&quot;None&quot; WindowState=&quot;Maximized&quot;&gt;</span><br><span class="line">    &lt;Window.Resources&gt;</span><br><span class="line">        &lt;ResourceDictionary&gt;</span><br><span class="line">            &lt;ResourceDictionary.MergedDictionaries&gt;</span><br><span class="line">                &lt;ResourceDictionary Source=&quot;Resources/AllResources.xaml&quot;/&gt;</span><br><span class="line">                &lt;ResourceDictionary&gt;</span><br><span class="line">                    &lt;Style TargetType=&quot;&#123;x:Type Button&#125;&quot;&gt;</span><br><span class="line">                        &lt;Setter Property=&quot;FontSize&quot; Value=&quot;100&quot;/&gt;</span><br><span class="line">                    &lt;/Style&gt;</span><br><span class="line">                &lt;/ResourceDictionary&gt;</span><br><span class="line">            &lt;/ResourceDictionary.MergedDictionaries&gt;</span><br><span class="line">        &lt;/ResourceDictionary&gt;</span><br><span class="line">    &lt;/Window.Resources&gt;</span><br><span class="line">    &lt;Grid&gt;</span><br><span class="line">        &lt;Grid.ColumnDefinitions&gt;</span><br><span class="line">            &lt;ColumnDefinition/&gt;</span><br><span class="line">            &lt;ColumnDefinition/&gt;</span><br><span class="line">        &lt;/Grid.ColumnDefinitions&gt;</span><br><span class="line">        &lt;Button Grid.Column=&quot;0&quot; Content=&quot;1&quot; Name=&quot;Button1&quot;/&gt;</span><br><span class="line">        &lt;Button Grid.Column=&quot;1&quot; Content=&quot;2&quot; Name=&quot;Button2&quot;/&gt;</span><br><span class="line">    &lt;/Grid&gt;</span><br><span class="line">&lt;/Window&gt;</span><br></pre></td></tr></table></figure>

<p>button1 的 FontSize 并不是 100；但是 button2 却没问题；</p>
<p>通常我们使用下面的代码是没问题的；</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;Window x:Class=&quot;TestApp.TestWindow&quot;</span><br><span class="line">        xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span><br><span class="line">        xmlns:x=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</span><br><span class="line">        Title=&quot;TestWindow&quot; Height=&quot;400&quot; Width=&quot;500&quot;</span><br><span class="line">        WindowStyle=&quot;None&quot; WindowState=&quot;Maximized&quot;&gt;</span><br><span class="line">    &lt;Window.Resources&gt;</span><br><span class="line">        &lt;Style TargetType=&quot;&#123;x:Type Button&#125;&quot;&gt;</span><br><span class="line">            &lt;Setter Property=&quot;FontSize&quot; Value=&quot;100&quot;/&gt;</span><br><span class="line">        &lt;/Style&gt;</span><br><span class="line">    &lt;/Window.Resources&gt;</span><br><span class="line">    &lt;Grid&gt;</span><br><span class="line">        &lt;Grid.ColumnDefinitions&gt;</span><br><span class="line">            &lt;ColumnDefinition/&gt;</span><br><span class="line">            &lt;ColumnDefinition/&gt;</span><br><span class="line">        &lt;/Grid.ColumnDefinitions&gt;</span><br><span class="line">        &lt;Button Grid.Column=&quot;0&quot; Content=&quot;1&quot; Name=&quot;Button1&quot;/&gt;</span><br><span class="line">        &lt;Button Grid.Column=&quot;1&quot; Content=&quot;2&quot; Name=&quot;Button2&quot;/&gt;</span><br><span class="line">    &lt;/Grid&gt;</span><br><span class="line">&lt;/Window&gt;</span><br></pre></td></tr></table></figure>



<h2 id="2、原因和解决方法"><a href="#2、原因和解决方法" class="headerlink" title="2、原因和解决方法"></a>2、原因和解决方法</h2><h3 id="2-1-原因"><a href="#2-1-原因" class="headerlink" title="2.1 原因"></a>2.1 原因</h3><p>因为把 Button 默认样式放在了 ResourceDictionary.MergedDictionaries 内部的ResourceDictionary 内了，这样在解析引用样式的时候会跳过第一个元素；</p>
<h3 id="2-2-解决方案"><a href="#2-2-解决方案" class="headerlink" title="2.2 解决方案"></a>2.2 解决方案</h3><p>将 style 提到 ResourceDictionary.MergedDictionaries 之外</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;Window.Resources&gt;</span><br><span class="line">    &lt;ResourceDictionary&gt;</span><br><span class="line">        &lt;ResourceDictionary.MergedDictionaries&gt;</span><br><span class="line">            &lt;ResourceDictionary Source=&quot;Resources/AllResources.xaml&quot;/&gt;</span><br><span class="line">        &lt;/ResourceDictionary.MergedDictionaries&gt;</span><br><span class="line">        &lt;Style TargetType=&quot;&#123;x:Type Button&#125;&quot;&gt;</span><br><span class="line">            &lt;Setter Property=&quot;FontSize&quot; Value=&quot;100&quot;/&gt;</span><br><span class="line">        &lt;/Style&gt;</span><br><span class="line">    &lt;/ResourceDictionary&gt;</span><br><span class="line">&lt;/Window.Resources&gt;</span><br><span class="line">&lt;Grid&gt;</span><br><span class="line">    &lt;Grid.ColumnDefinitions&gt;</span><br><span class="line">        &lt;ColumnDefinition/&gt;</span><br><span class="line">        &lt;ColumnDefinition/&gt;</span><br><span class="line">    &lt;/Grid.ColumnDefinitions&gt;</span><br><span class="line">    &lt;Button Grid.Column=&quot;0&quot; Content=&quot;1&quot; Name=&quot;Button1&quot;/&gt;</span><br><span class="line">    &lt;Button Grid.Column=&quot;1&quot; Content=&quot;2&quot; Name=&quot;Button2&quot;/&gt;</span><br><span class="line">&lt;/Grid&gt;</span><br></pre></td></tr></table></figure>



<p>参考链接：<a href="https://stackoverflow.com/questions/4811884/wpf-doesnt-apply-style-to-first-element">resources - WPF doesn’t apply style to first element - Stack Overflow</a></p>
]]></content>
      <categories>
        <category>WPF</category>
      </categories>
      <tags>
        <tag>.Net</tag>
        <tag>C#</tag>
        <tag>WPF</tag>
        <tag>Style</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows Terminal 集成 Oh My Posh</title>
    <url>/2021/12/29/Windows-Terminal-%E9%9B%86%E6%88%90-Oh-My-Posh/</url>
    <content><![CDATA[<h1 id="1-准备安装环境"><a href="#1-准备安装环境" class="headerlink" title="1. 准备安装环境"></a>1. 准备安装环境</h1><p>Windows Termianl, PowerShell 都可以从 Microsoft Store 中下载</p>
<ul>
<li><a href="https://www.microsoft.com/store/productId/9N0DX20HK701">Windows Terminal</a> (Windows 自带)</li>
<li> <a href="https://www.microsoft.com/store/productId/9MZ1SNWT0N5D">PowerShell</a></li>
</ul>
<p>具体安装这里不做详细说明</p>
<span id="more"></span>

<h1 id="2-安装-Oh-My-Posh"><a href="#2-安装-Oh-My-Posh" class="headerlink" title="2. 安装 Oh My Posh"></a>2. 安装 Oh My Posh</h1><div class="note info"><p>这里推荐去 Oh My Posh 官方网站查看最新的安装方法；</p>
<p>网上的大部分教程，存在时效性问题，因为  Oh My Posh 是不断更新的，不同时间不同版本的安装方法可能不一样</p>
<p>因此搜索到的二手安装教程不一定使用目前安装的你</p>
</div>

<p><a href="https://ohmyposh.dev/">Home | Oh My Posh</a></p>
<p><a href="https://ohmyposh.dev/docs/">Introduction | Oh My Posh</a></p>
<h2 id="2-1-参考文档："><a href="#2-1-参考文档：" class="headerlink" title="2.1 参考文档："></a>2.1 参考文档：</h2><p><a href="https://blog.walterlv.com/post/beautify-powershell-like-zsh.html">将美化进行到底，使用 Oh My Posh 把 PowerShell 做成 oh-my-zsh 的样子 - walterlv</a></p>
<h2 id="2-2-可能使用到的命令"><a href="#2-2-可能使用到的命令" class="headerlink" title="2.2 可能使用到的命令"></a>2.2 可能使用到的命令</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看已经安装的模块</span></span><br><span class="line">Get-InstalledModule</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 当前用户安装一个模块 （-Verbose 参数显示细节）全局使用 AllUsers</span> </span><br><span class="line">Install-Module oh-my-posh -Scope CurrentUser -Verbose</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 导入加载一个模块 （-Verbose 参数显示细节）</span></span><br><span class="line">Import-Module oh-my-posh -Verbose</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 卸载一个模块</span></span><br><span class="line">Uninstall-Module -Name  oh-my-posh</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看 PowerShell 安装源 Gallery</span></span><br><span class="line">Get-PSRepository</span><br></pre></td></tr></table></figure>

<p>参考链接：</p>
<p><a href="https://docs.microsoft.com/zh-cn/powershell/module/powershellget/install-module?view=powershell-7">Install-Module (PowerShellGet) - PowerShell | Microsoft Docs</a></p>
<p><a href="https://docs.microsoft.com/zh-cn/powershell/module/powershellget/get-psrepository?view=powershell-7">Get-PSRepository (PowerShellGet) - PowerShell | Microsoft Docs</a></p>
<p><a href="https://www.powershellgallery.com/">PowerShell Gallery | Home</a></p>
<h2 id="2-3-字体选择"><a href="#2-3-字体选择" class="headerlink" title="2.3 字体选择"></a>2.3 字体选择</h2><p>官方推荐 <a href="https://www.nerdfonts.com/font-downloads">Nerd Fonts - Iconic font aggregator, glyphs/icons collection, &amp; fonts patcher</a> </p>
<p>下载自定后安装方法：</p>
<p>解压、进入字体目录、全选、右键、安装 即可</p>
<h1 id="3-Posh-Git-安装"><a href="#3-Posh-Git-安装" class="headerlink" title="3. Posh-Git 安装"></a>3. Posh-Git 安装</h1><p><a href="https://github.com/dahlbyk/posh-git">dahlbyk/posh-git: A PowerShell environment for Git (github.com)</a></p>
<p>Posh-Git 提供了强大的 tab 补全功能， 并针对提示符进行了增强；可以在 Terminal 中使用</p>
<p>官方文档安装方法： <a href="https://git-scm.com/book/zh/v2/%E9%99%84%E5%BD%95-A%3A-%E5%9C%A8%E5%85%B6%E5%AE%83%E7%8E%AF%E5%A2%83%E4%B8%AD%E4%BD%BF%E7%94%A8-Git-Git-%E5%9C%A8-PowerShell-%E4%B8%AD%E4%BD%BF%E7%94%A8-Git">Git - Git 在 PowerShell 中使用 Git (git-scm.com)</a></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Install-Module</span> posh<span class="literal">-git</span> <span class="literal">-Scope</span> CurrentUser <span class="literal">-Force</span></span><br></pre></td></tr></table></figure>

<p>这里不做详细说明</p>
]]></content>
      <categories>
        <category>Termianl</category>
        <category>PowerShell</category>
      </categories>
      <tags>
        <tag>Termianl,PowerShell,Oh-My-Posh</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo 集成 PicGo Github 图床</title>
    <url>/2022/01/20/Hexo-%E9%9B%86%E6%88%90-PicGo-Github-%E5%9B%BE%E5%BA%8A/</url>
    <content><![CDATA[<h1 id="0、背景说明"><a href="#0、背景说明" class="headerlink" title="0、背景说明"></a>0、背景说明</h1><p>博主原来使用七牛云图床，好处：10G 免费空间；坏处：域名有效期一个月；超出一个月就没法使用了；</p>
<p>因而转向了其他图床，发现 PicGo 中支持的图床有 Github，觉得是一个不错的选择</p>
<p>使用 Github 图床的好处：</p>
<ol>
<li>没有域名限制；</li>
<li>仓库虽然空间有限（1G），但是满了可以再新建一个仓库，因此相当于无限</li>
<li>有人说慢，但是可以设置加速</li>
<li>稳定，不用担心挂了或者失效</li>
</ol>
<span id="more"></span>

<p>参考：</p>
<p><a href="https://www.cnblogs.com/52duan/p/12551393.html">MarkDown、Hexo博客、Coding托管、GitHub做图床、CDN加速 - 段十三 - 博客园 (cnblogs.com)</a></p>
<h1 id="1、新建一个仓库"><a href="#1、新建一个仓库" class="headerlink" title="1、新建一个仓库"></a>1、新建一个仓库</h1><ol>
<li>名字自定义，例如：pic_bed</li>
<li>选择 Public</li>
<li>勾选初始化复选框： Initialize this repository with a README</li>
<li>点击 Create repository 创建成功</li>
<li> <a href="https://github.com/settings/tokens/new">New personal access token (github.com)</a> 配置图床的时候要用：</li>
<li>Note下面的文本框内容自定义</li>
<li>下面很多复选框，只需要勾选 repo 也就是第一个复选框</li>
<li>最下面点击Generate token即可生成</li>
<li>下面要用，如果忘记了可以在重新生成</li>
</ol>
<h1 id="2、安装配置-PicGo"><a href="#2、安装配置-PicGo" class="headerlink" title="2、安装配置 PicGo"></a>2、安装配置 <a href="https://molunerfinn.com/PicGo/">PicGo</a></h1><p>下载安装，这里不再说明，</p>
<p>安装后启动 PicGo，找到 Github 图床，如下图所示：</p>
<p><img src="https://cdn.jsdelivr.net/gh/buctllx/picture_bed/img/image-20220120182829709.png" alt="image-20220120182829709"></p>
<p>填写第一步中创建的 仓库名，分支名，以及 Token </p>
<p>然后“确定”，并设置为默认图床即可</p>
<h1 id="3、配置-JsDeliv，给图片镶上加速器"><a href="#3、配置-JsDeliv，给图片镶上加速器" class="headerlink" title="3、配置 JsDeliv，给图片镶上加速器"></a>3、配置 JsDeliv，给图片镶上加速器</h1><ul>
<li>比如在GitHub的图片路径是：<a href="https://github.com/user/pic_bed/img/test_image.png">https://github.com/user/pic_bed/img/test_image.png</a></li>
<li>拼接链接方法1：<a href="https://cdn.jsdelivr.net/gh/user/pic_bed@latest/img/test_image.png">https://cdn.jsdelivr.net/gh/user/pic_bed@latest/img/test_image.png</a></li>
<li>拼接链接方法2：<a href="https://cdn.jsdelivr.net/gh/user/pic_bed/img/test_image.png">https://cdn.jsdelivr.net/gh/user/pic_bed/img/test_image.png</a></li>
</ul>
<p><strong>将方法1和方法2拼接起来的链接前缀输入到上图第5步的自定义域名中即可</strong></p>
<ul>
<li>拼接链接方法1：<a href="https://cdn.jsdelivr.net/gh/user/pic_bed@latest/">https://cdn.jsdelivr.net/gh/user/pic_bed@latest/</a></li>
<li>拼接链接方法2：<a href="https://cdn.jsdelivr.net/gh/user/pic_bed/">https://cdn.jsdelivr.net/gh/user/pic_bed/</a></li>
</ul>
<h1 id="4、再-Typora-中选择-PicGo-app-作为图片上传服务"><a href="#4、再-Typora-中选择-PicGo-app-作为图片上传服务" class="headerlink" title="4、再 Typora 中选择 PicGo app 作为图片上传服务"></a>4、再 Typora 中选择 PicGo app 作为图片上传服务</h1><p><a href="https://buctllx.github.io/2021/12/06/Typora-%E8%AE%BE%E7%BD%AE%E5%85%B3%E8%81%94%E4%B8%83%E7%89%9B%E4%BA%91%E5%9B%BE%E5%BA%8A/#3-Typora-%E5%9B%BE%E7%89%87%E5%AD%98%E5%82%A8%E8%AE%BE%E7%BD%AE">Typora 设置关联七牛云图床 | ConorLuo 博客 (buctllx.github.io)</a></p>
]]></content>
      <categories>
        <category>Hexo</category>
        <category>PicGo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>PicGo</tag>
      </tags>
  </entry>
  <entry>
    <title>Revit 构件参数体系说明</title>
    <url>/2022/01/20/Revit-%E6%9E%84%E4%BB%B6%E5%8F%82%E6%95%B0%E4%BD%93%E7%B3%BB%E8%AF%B4%E6%98%8E/</url>
    <content><![CDATA[<h1 id="1、Revit-构件分类说明"><a href="#1、Revit-构件分类说明" class="headerlink" title="1、Revit 构件分类说明"></a>1、Revit 构件分类说明</h1><p>从不同的维度 Revit 构件（图元）有不同的分类；</p>
<p>对用用户来说：最为熟悉的就是“项目浏览器”中“族”节点的三级分类：</p>
<p>这里主要介绍以下几种分类维度；</p>
<span id="more"></span>

<h2 id="1-1-常见的三级分类"><a href="#1-1-常见的三级分类" class="headerlink" title="1.1 常见的三级分类"></a>1.1 常见的三级分类</h2><p>三级分类，一般用于用户分类管理各种构件，方便用户快速检索使用；</p>
<p>每一级分类都有自己的参数，只不过用户经常关注的时：类型参数、实例参数而已</p>
<p><img src="https://cdn.jsdelivr.net/gh/buctllx/picture_bed/img/image-20220121142116181.png" alt="image-20220121142116181"></p>
<h3 id="一级分类-类别"><a href="#一级分类-类别" class="headerlink" title="一级分类 - 类别"></a>一级分类 - 类别</h3><p>英文名字也是 API 的名字：Category</p>
<p>Category 是 Revit 软件内置的基础数据，不能被用户和开发者“增删改”，用户只有使用权限；</p>
<p>对于某个确定的 Revit 版本 Category 数量是固定的，只有在 Revit 版本的变化的时候 Category 才可能变化（一般是新增）</p>
<p>Category 内部也是有联系的，具体变现为子类别 SubCategory，这一点一般用户是看不到的；</p>
<p>下面是 Revit API 暴露出来的所有的 Category，可以通过切花版本查看；</p>
<p><a href="https://www.revitapidocs.com/2020/ba1c5b30-242f-5fdc-8ea9-ec3b61e6e722.htm">Revit API BuiltInCategory Enumeration (revitapidocs.com)</a></p>
<p>经过个人统计 Category 发现：</p>
<p>总数：2000+</p>
<p>一般项目中用到的：900左右</p>
<p>实际建模常用的：不超过100</p>
<h3 id="二级分类-族"><a href="#二级分类-族" class="headerlink" title="二级分类 - 族"></a>二级分类 - 族</h3><p>Family</p>
<p>在类别之下的二级分类；</p>
<p>所有添加到 Revit 项目中的图元都是使用族创建的。</p>
<p>族 在 Revit 中也分为多种类型，具有一定的可扩展性，但并不是所有的族都能扩展，后面 1.2 章节会说明</p>
<p>这里需要特殊说明的是：族并不是单一的构件，它是可以嵌套，复合的，从而生成更加复杂高级的族；</p>
<p>更多详细说明参见 Autodesk Revit 官方文档：<a href="https://help.autodesk.com/view/RVT/2016/CHS/?guid=GUID-4EBB97AD-C7B6-4828-91EB-BC0E99B81E43">帮助: Revit 族 (autodesk.com)</a></p>
<h3 id="三级分类-类型"><a href="#三级分类-类型" class="headerlink" title="三级分类 - 类型"></a>三级分类 - 类型</h3><p>xxx_Type，FamilySymbol</p>
<p>一个族，可以有多个类型；一般叫：族类型；</p>
<p>类型是用户建模的时候必须指定的信息，</p>
<p>指定了类型，就只定了族和类别；</p>
<p>类型下面就是“图元”了，也可以叫构件；所谓图元，就是在模型视图中实实在在看到的对象，但被选中时，会高亮显示，并且会在“属性”窗口中显示图元的参数信息；</p>
<p><font color="red">“属性”窗口中显示的并不是图元所有的属性信息</font></p>
<h2 id="1-2-按族类型分类"><a href="#1-2-按族类型分类" class="headerlink" title="1.2 按族类型分类"></a>1.2 按族类型分类</h2><h3 id="系统族"><a href="#系统族" class="headerlink" title="系统族"></a>系统族</h3><p>特点：</p>
<ol>
<li>Revit 软件内置的，所有的 rvt 文件都是一样的；</li>
<li>有限的；</li>
<li>用户不能自己添加 / 删除（Revit 升级的时候或许会新增）；</li>
</ol>
<p>常见的系统族：墙，楼板、各种管线、屋顶、……</p>
<h3 id="载入族"><a href="#载入族" class="headerlink" title="载入族"></a>载入族</h3><p>特点：</p>
<ol>
<li>以 rfa 文件的形式存在；</li>
<li>可以载入不同的 rvt 文件中复用；</li>
<li>用户可以自己新增或者删除；</li>
</ol>
<p>常见的系统族：梁、柱、管件、管道附件、末端、家具、设备……</p>
<h3 id="内建族"><a href="#内建族" class="headerlink" title="内建族"></a>内建族</h3><p>特点：</p>
<ol>
<li>只存在于某一个 rvt 文件内，不能被复用；</li>
<li>只包含一个类型且类型名称和族名称一样</li>
<li>用户可以自己新增或者删除；</li>
</ol>
<p>可以随意指定，创建的时候只需要指定 类别，输入一个族名称，Revit 就会自动创建一个内建族</p>
<h2 id="1-3-按-Category-类型分类"><a href="#1-3-按-Category-类型分类" class="headerlink" title="1.3 按 Category 类型分类"></a>1.3 按 Category 类型分类</h2><p>这种分类是按照 Category 的属性信息 Category Type 进行划分的</p>
<p>一般较少关注</p>
<h3 id="模型类构件-模型族"><a href="#模型类构件-模型族" class="headerlink" title="模型类构件(模型族)"></a>模型类构件(模型族)</h3><p>可以在三维视图中进行查看的；</p>
<p>例如：墙、梁、板、柱、……</p>
<h3 id="详图类构件-注释族"><a href="#详图类构件-注释族" class="headerlink" title="详图类构件(注释族)"></a>详图类构件(注释族)</h3><p>在平面视图中进行辅助查看，不能在三维视图中看到；</p>
<p>例如：标记、尺寸标注、……</p>
<h3 id="分析类构件-分析族"><a href="#分析类构件-分析族" class="headerlink" title="分析类构件(分析族)"></a>分析类构件(分析族)</h3><p>Revit 中有一个单独的分析模块，分析族用来展示分析结果的</p>
<p>例如：分析墙、分析柱、……</p>
<h3 id="内部类构件-内部族"><a href="#内部类构件-内部族" class="headerlink" title="内部类构件(内部族)"></a>内部类构件(内部族)</h3><p>Revit 内部使用的；</p>
<p>用户一般不直接使用，通常起到辅助类的构件；</p>
<p>例如：结构连接处理程序、部件、……</p>
<h1 id="2、Revit-参数分类说明"><a href="#2、Revit-参数分类说明" class="headerlink" title="2、Revit 参数分类说明"></a>2、Revit 参数分类说明</h1><p>Revit 参数也有多个分类的维度，</p>
<p>这里主要介绍以下几种分类维度</p>
<h2 id="2-1-按作用的层级"><a href="#2-1-按作用的层级" class="headerlink" title="2.1 按作用的层级"></a>2.1 按作用的层级</h2><p>作用层级包含了三级分类，在 1.1 中说明过，每一级都有自己的描述参数；</p>
<p>除了三级分类，这里补充说明了“项目参数”和“实例参数”</p>
<h3 id="项目级参数"><a href="#项目级参数" class="headerlink" title="项目级参数"></a>项目级参数</h3><p>这里项目有别于建筑设计的项目，意思是 rvt 文件，Revit 默认一个 rvt 文件就是一个项目文件，rvt 文件级别的参数就是项目参数，不同的 rvt 文件可以定义不同数量的参数；</p>
<p>所有的项目参数集合在一起，叫做“项目信息”，也是一个 Category 类别</p>
<p>符合 Revit 添加参数的统一流程</p>
<h3 id="族级参数"><a href="#族级参数" class="headerlink" title="族级参数"></a>族级参数</h3><p>被用来描述族 Family 的相关信息；</p>
<p>一边较少使用，且不能增删改</p>
<p><img src="https://cdn.jsdelivr.net/gh/buctllx/picture_bed/img/image-20220121181936225.png" alt="image-20220121181936225"></p>
<h3 id="类型级参数"><a href="#类型级参数" class="headerlink" title="类型级参数"></a>类型级参数</h3><p>一个族一般有多个类型，一个类型之所以区别于另一个类型，就是因为类型参数的参数值不一样（如果一样，那么就可以认为是相同的类型，就没必要新建这个类型了）</p>
<p>为了描述族下面的多个类型，因此产生了类型参数；</p>
<p><img src="https://cdn.jsdelivr.net/gh/buctllx/picture_bed/img/image-20220121182705093.png" alt="image-20220121182705093"></p>
<h3 id="实例级参数"><a href="#实例级参数" class="headerlink" title="实例级参数"></a>实例级参数</h3><p>视图中看到的每一个图元，都有自己的属性信息，这些属性信息都是通过实例参数描述的；</p>
<p>具体变现为：Revit “属性”窗口中看到的参数（上面截图，左侧部分）</p>
<h2 id="2-1-按参数的定义"><a href="#2-1-按参数的定义" class="headerlink" title="2.1 按参数的定义"></a>2.1 按参数的定义</h2><p>这种分类方式，只关心参数是如何定义的，不关心这个参数将会被用于描述哪个对象；</p>
<p>通过不同不同的定义方式，可以将参数分为以下几类；</p>
<h3 id="内置参数"><a href="#内置参数" class="headerlink" title="内置参数"></a>内置参数</h3><p>BuiltinParameter</p>
<p>在 Revit 中通过枚举的方式暴露出来，用户不能做任何修改；</p>
<p><a href="https://www.revitapidocs.com/2020/fb011c91-be7e-f737-28c7-3f1e1917a0e0.htm">BuiltInParameter Enumeration (revitapidocs.com)</a></p>
<h3 id="共享参数"><a href="#共享参数" class="headerlink" title="共享参数"></a>共享参数</h3><p>用户通过共享参数文件定义；</p>
<p>一般情况下一个用户定义并使用一个共享参数文件，也可以做到多个用户使用同一个共享参数文件；</p>
<h3 id="族参数"><a href="#族参数" class="headerlink" title="族参数"></a>族参数</h3><p>在编辑 rfa 文件过程中定义的参数；</p>
<p>根据创建方式的不同，还可以划分为：</p>
<ol>
<li>共享参数</li>
<li>一般族参数<ol>
<li>这类参数比较特殊，该类型的参数只能在族文件范围内定义，</li>
<li>简单来说就是，只能在编辑 rfa 文件的时候进行定义；且有效的使用范围只能在 rfa 文件内部；</li>
<li>这中参数是造成 revit 参数被滥用的一个原因</li>
</ol>
</li>
</ol>
<p>族参数，在族内部作用的层级，还可以划分为：</p>
<ul>
<li>类型参数</li>
<li>实例参数；</li>
</ul>
<p>参考：2.1 中的类型参数和实例参数；</p>
<h3 id="全局参数"><a href="#全局参数" class="headerlink" title="全局参数"></a>全局参数</h3><h1 id="3、Revit-参数管理体系"><a href="#3、Revit-参数管理体系" class="headerlink" title="3、Revit 参数管理体系"></a>3、Revit 参数管理体系</h1><p>在 Revit 中所有的参数都必须先定义，然后才能被使用；</p>
<p>关于参数定义，Revit 有自己的一套管理体系；</p>
<p>下面截图是各种参数的定义截图</p>
<div class="tabs" id="各种参数定义"><ul class="nav-tabs"><li class="tab active"><a href="#各种参数定义-1">[共享参数定义]</a></li><li class="tab"><a href="#各种参数定义-2">[项目参数定义]</a></li><li class="tab"><a href="#各种参数定义-3">[项目参数使用共享参数定义]</a></li><li class="tab"><a href="#各种参数定义-4">[族参数定义]</a></li></ul><div class="tab-content"><div class="tab-pane active" id="各种参数定义-1"><p><img src="https://cdn.jsdelivr.net/gh/buctllx/picture_bed/img/image-20220121145632974.png" alt="image-20220121145632974"></p></div><div class="tab-pane" id="各种参数定义-2"><p><img src="https://cdn.jsdelivr.net/gh/buctllx/picture_bed/img/image-20220121150553052.png" alt="image-20220121150553052"></p></div><div class="tab-pane" id="各种参数定义-3"><p><img src="https://cdn.jsdelivr.net/gh/buctllx/picture_bed/img/image-20220121151733095.png" alt="image-20220121151733095"></p></div><div class="tab-pane" id="各种参数定义-4"><p><img src="https://cdn.jsdelivr.net/gh/buctllx/picture_bed/img/image-20220121151930344.png" alt="image-20220121151930344"></p></div></div></div>



<p>从上面的截图可以看出来，用于参数管理的主要有以下几个信息：</p>
<ul>
<li>规程</li>
<li>参数类型</li>
<li>参数分组</li>
<li>参数分组方式</li>
<li>类型 or 实例</li>
<li>是否报告参数</li>
</ul>
<p>这些信息，主要用于描述一个参数，方便 Revit 对参数进行管理；</p>
<p><font color="red">“参数定义”并不关注这个参数将会被用于描述什么对象，或者单位是什么；</font>参数的 描述对象，单位信息，则是通过一种关联关系进行使用</p>
<p>因为：</p>
<ol>
<li>一个参数的定义可以被用于描述一个或者多个对象，在给对象添加参数的时候，去选择已经定义好的参数就行了；【添加项目参数的后最右侧会有关联对象的选择】</li>
<li>一个参数可能没有单位或者有多个单位；具体选择哪个单位，在显示或者使用的时候确定就可以了，如下图所示；</li>
</ol>
<p><img src="https://cdn.jsdelivr.net/gh/buctllx/picture_bed/img/image-20220121174516331.png" alt="image-20220121174516331"></p>
]]></content>
      <categories>
        <category>Revit</category>
      </categories>
      <tags>
        <tag>Revit</tag>
      </tags>
  </entry>
</search>
